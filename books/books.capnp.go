// Code generated by capnpc-go. DO NOT EDIT.

package books

import (
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

type Book struct{ capnp.Struct }

// Book_TypeID is the unique identifier for the type Book.
const Book_TypeID = 0xb01fe9b762ba1b64

func NewBook(s *capnp.Segment) (Book, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Book{st}, err
}

func NewRootBook(s *capnp.Segment) (Book, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Book{st}, err
}

func ReadRootBook(msg *capnp.Message) (Book, error) {
	root, err := msg.RootPtr()
	return Book{root.Struct()}, err
}

func (s Book) String() string {
	str, _ := text.Marshal(0xb01fe9b762ba1b64, s.Struct)
	return str
}

func (s Book) Title() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Book) HasTitle() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Book) TitleBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Book) SetTitle(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Book) PageCount() int32 {
	return int32(s.Struct.Uint32(0))
}

func (s Book) SetPageCount(v int32) {
	s.Struct.SetUint32(0, uint32(v))
}

// Book_List is a list of Book.
type Book_List struct{ capnp.List }

// NewBook creates a new list of Book.
func NewBook_List(s *capnp.Segment, sz int32) (Book_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return Book_List{l}, err
}

func (s Book_List) At(i int) Book { return Book{s.List.Struct(i)} }

func (s Book_List) Set(i int, v Book) error { return s.List.SetStruct(i, v.Struct) }

func (s Book_List) String() string {
	str, _ := text.MarshalList(0xb01fe9b762ba1b64, s.List)
	return str
}

// Book_Promise is a wrapper for a Book promised by a client call.
type Book_Promise struct{ *capnp.Pipeline }

func (p Book_Promise) Struct() (Book, error) {
	s, err := p.Pipeline.Struct()
	return Book{s}, err
}

const schema_9a02f7780b10e176 = "x\xda\x14\xc8;\x8a\xc2@\x00\x06\xe0\xff\x9fLv\x17" +
	"6EF\xb4\x10\x9146\x82/\xb4\x11\x1bE/\xe0" +
	"x\x01I4\x88D2\x81\xc4\xc7Y<\x85\x9d\x90\xdb" +
	"Xz\x02\xcb\x91T\x1f|\xfed!\x94\xbb\x05\xb4t" +
	"\x7f\xec\xbeUF\xcfw\xf0\x80\xae\x91\xf6\xf2\xf2\xffo" +
	"\x1fq\x87\xcb_@5J\xd5\xael^A\x1b\x19\x93" +
	"\xe4\xc3\xc8\xd0$\xf9`\x17f\xe9<\x9b-\x8dI\xd6" +
	"\xa4\xfes$ \x09\xa8\xee\x18\xd0\x1d\x87z$H\xd6" +
	"Y]\x7f\x03\xe8\x9eC=\x15\x0c\x8acq\x8a\xe9A" +
	"\xd0\x03m\x16\x1e\xe2\x959\xa7`A\x09A\x09~\x03" +
	"\x00\x00\xff\xff\xdb\xf2!\x9e"

func init() {
	schemas.Register(schema_9a02f7780b10e176,
		0xb01fe9b762ba1b64)
}
